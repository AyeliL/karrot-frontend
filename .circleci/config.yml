defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8.5

android-defaults: &android-defaults
  working_directory: ~/repo
  docker:
    - image: karrot/android-build:api-27-node8-alpha

build-android: &build-android
  name: build android
  command: |
    rm -f cordova/www
    mv dist-app-${CORDOVA_ENV} cordova/www
    cd ~/repo/cordova
    rm -f config/current
    ln -s "$CORDOVA_ENV" config/current
    cordova platform add android
    ./build android "$CORDOVA_ENV" release "${!PASSWORD_VAR}"
    mv platforms/android/build/outputs/apk/release/android-release.apk ~/repo/android-${CORDOVA_ENV}.apk

version: 2
jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          environment:
            JEST_JUNIT_OUTPUT: test-reports/junit.xml
          command: |
            mkdir -p test-reports
            yarn add jest-junit
            yarn test \
              --ci \
              --runInBand \
              --testResultsProcessor="./node_modules/jest-junit"
      - run: bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  e2e-test:
    working_directory: ~/repo
    docker:
      - image: karrot/python:1.5
        environment:
          PGHOST: 127.0.0.1
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: fstool_e2etest
      - image: redis:3.2.11
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          key: python-cache-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          key: python-cache-{{ checksum "requirements.txt" }}-
          key: python-cache-
      - run:
          name: prepare backend
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
          command: |
            set -x
            apt-get install wget
            test -d env/bin || virtualenv -p python3 env
            source env/bin/activate
            git clone https://github.com/yunity/karrot-backend
            cd karrot-backend
            pip install --upgrade pip
            pip install pip-tools
            pip-sync requirements*.txt
            cp config/local_settings.py.ci config/local_settings.py
            (cd mjml && yarn)
            mjml/convert
      - run:
          name: run backend
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
          command: |
            set -x
            source env/bin/activate
            cd karrot-backend
            python manage.py migrate
            python manage.py runserver
          background: true
      - run:
          name: run frontend
          command: yarn serve
          background: true
      - run:
          name: wait for frontend to get ready
          command: wget --retry-connrefused -T 30 http://localhost:8080
      - run:
          name: wait for backend to get ready
          command: wget --retry-connrefused -T 30 http://localhost:8000/api/groups-info/
      - run:
          name: list all available browsers for your personal benefit
          command: $(yarn bin)/testcafe -b saucelabs
          background: true
      - run:
          name: testcafe
          command: yarn e2e --ci
      - save_cache:
          paths:
            - env
            - ~/.cache/pip
          key: python-cache-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

workflows:
  version: 2
  all-the-things:
    jobs:
      - install-dependencies
      - e2e-test:
          requires:
            - install-dependencies
